{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Munib\\\\Desktop\\\\advanced_node_auth\\\\client\\\\src\\\\components\\\\screens\\\\RegisterScreen.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link, Navigate } from \"react-router-dom\";\nimport \"./RegisterScreen.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterScreen = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setComfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    if (localStorage.getItem(\"auth_token\")) {\n      Navigate(\"/\");\n    }\n  }, []);\n  const registerHandler = async e => {\n    e.preventDefault();\n    console.log(\"username:\", username);\n    console.log(\"email:\", email);\n    console.log(\"password:\", password);\n    console.log(\"confirmPassword:\", confirmPassword);\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    if (password !== confirmPassword) {\n      setPassword(\"\");\n      confirmPassword(\"\");\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n      return setError(\"Password do not match\");\n    }\n    try {\n      const {\n        data\n      } = await axios.post(\"/api/auth/register\", {\n        username,\n        email,\n        password\n      }, config);\n      localStorage.setItem(\"authToken\", data.token);\n      Navigate(\"/\");\n    } catch (error) {\n      console.log(error.response); // Add this line to log the error response\n      setError(error.responce.data.error);\n      setTimeout(() => {\n        setError(\"\");\n      }, 5000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: registerHandler,\n      className: \"register-screen__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"register-screen__title\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error-message\",\n        children: [\" \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          id: \"name\",\n          placeholder: \"Enter username\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          required: true,\n          id: \"email\",\n          placeholder: \"Enter email address\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          required: true,\n          id: \"password\",\n          placeholder: \"Enter password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmpassword\",\n          children: \"Confirm Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          required: true,\n          id: \"confirmpassword\",\n          placeholder: \"Confirm password\",\n          value: confirmPassword,\n          onChange: e => setComfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"register-screen__subtext\",\n        children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterScreen, \"IaUu6e0urSWUDl/XPphmppwSPdQ=\");\n_c = RegisterScreen;\nexport default RegisterScreen;\n\n// import { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import { Link, useNavigate } from \"react-router-dom\";\n\n// import \"./RegisterScreen.css\";\n\n// const RegisterScreen = () => {\n//   const [username, setUsername] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [confirmPassword, setConfirmPassword] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n\n//   const navigate = useNavigate();\n//   useEffect(() => {\n//     if (localStorage.getItem(\"authToken\")) {\n//       navigate(\"/\");\n//     }\n//   }, []);\n\n//   const registerHandler = async (e) => {\n//     e.preventDefault();\n\n//     const config = {\n//       header: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//     };\n\n//     if (password !== confirmPassword) {\n//       setPassword(\"\");\n//       setConfirmPassword(\"\");\n//       setTimeout(() => {\n//         setError(\"\");\n//       }, 5000);\n//       return setError(\"password do not match\");\n//     }\n\n//     try {\n//       const { data } = await axios.post(\n//         \"/api/auth/register\",\n//         { username, email, password },\n//         config\n//       );\n\n//       localStorage.setItem(\"authToken\", data.token);\n//       navigate(\"/\");\n//     } catch (error) {\n//       setError(error.response.data.error);\n//       setTimeout(() => {\n//         setError(\"\");\n//       }, 5000);\n//     }\n//   };\n//   return (\n//     <div className=\"register-screen\">\n//       <form onSubmit={registerHandler} className=\"register-screen__form\">\n//         <h3 className=\"register-screen__title\">Regsiter</h3>\n//         {error && <span className=\"error-message\">{error}</span>}\n//         <div className=\"form-group\">\n//           <label htmlFor=\"name\">username</label>\n//           <input\n//             type=\"text\"\n//             required\n//             id=\"name\"\n//             placeholder=\"enter your username\"\n//             value={username}\n//             onChange={(e) => setUsername(e.target.value)}\n//           />\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label htmlFor=\"email\">email</label>\n//           <input\n//             type=\"email\"\n//             required\n//             id=\"email\"\n//             placeholder=\"enter your email\"\n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//           />\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label htmlFor=\"password\">password</label>\n//           <input\n//             type=\"password\"\n//             required\n//             id=\"password\"\n//             placeholder=\"enter your password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//           />\n//         </div>\n\n//         <div className=\"form-group\">\n//           <label htmlFor=\"confirmpassword\">confirm password</label>\n//           <input\n//             type=\"password\"\n//             required\n//             id=\"confirmpassword\"\n//             placeholder=\"confirm your password\"\n//             value={confirmPassword}\n//             onChange={(e) => setConfirmPassword(e.target.value)}\n//           />\n//         </div>\n//         <button type=\"submit\">register</button>\n\n//         <span className=\"register-screen__subtext\">\n//           already have an account? <Link to=\"/login\">Login</Link>{\" \"}\n//         </span>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default RegisterScreen;\nvar _c;\n$RefreshReg$(_c, \"RegisterScreen\");","map":{"version":3,"names":["useState","useEffect","axios","Link","Navigate","jsxDEV","_jsxDEV","RegisterScreen","_s","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setComfirmPassword","error","setError","localStorage","getItem","registerHandler","e","preventDefault","console","log","config","header","setTimeout","data","post","setItem","token","response","responce","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","required","id","placeholder","value","onChange","target","to","_c","$RefreshReg$"],"sources":["C:/Users/Munib/Desktop/advanced_node_auth/client/src/components/screens/RegisterScreen.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, Navigate } from \"react-router-dom\";\r\nimport \"./RegisterScreen.css\";\r\n\r\nconst RegisterScreen = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setComfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if(localStorage.getItem(\"auth_token\")){\r\n        Navigate(\"/\");\r\n    }\r\n  },[])\r\n\r\n  const registerHandler = async (e) => {\r\n    e.preventDefault();\r\n    console.log(\"username:\", username);\r\n    console.log(\"email:\", email);\r\n    console.log(\"password:\", password);\r\n    console.log(\"confirmPassword:\", confirmPassword);\r\n    const config = {\r\n      header: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    if (password !== confirmPassword) {\r\n      setPassword(\"\");\r\n      confirmPassword(\"\");\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n      return setError(\"Password do not match\");\r\n    }\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"/api/auth/register\",\r\n        { username, email, password },\r\n        config\r\n      );\r\n      localStorage.setItem(\"authToken\", data.token);\r\n\r\n      Navigate(\"/\");\r\n    } catch (error) {\r\n      console.log(error.response); // Add this line to log the error response\r\n      setError(error.responce.data.error);\r\n      setTimeout(() => {\r\n        setError(\"\");\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-screen\">\r\n      <form onSubmit={registerHandler} className=\"register-screen__form\">\r\n        <h3 className=\"register-screen__title\">Register</h3>\r\n        {error && <span className=\"error-message\"> {error}</span>}\r\n        {/* username */}\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Username:</label>\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            id=\"name\"\r\n            placeholder=\"Enter username\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        {/* email */}\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            required\r\n            id=\"email\"\r\n            placeholder=\"Enter email address\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        {/* password */}\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\">Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            id=\"password\"\r\n            placeholder=\"Enter password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        {/* confirm password */}\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"confirmpassword\">Confirm Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            id=\"confirmpassword\"\r\n            placeholder=\"Confirm password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setComfirmPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Register\r\n        </button>\r\n        <span className=\"register-screen__subtext\">\r\n          Already have an account? <Link to=\"/login\">Login</Link>\r\n        </span>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n\r\n// import { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\n\r\n// import \"./RegisterScreen.css\";\r\n\r\n// const RegisterScreen = () => {\r\n//   const [username, setUsername] = useState(\"\");\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n//   const [error, setError] = useState(\"\");\r\n\r\n//   const navigate = useNavigate();\r\n//   useEffect(() => {\r\n//     if (localStorage.getItem(\"authToken\")) {\r\n//       navigate(\"/\");\r\n//     }\r\n//   }, []);\r\n\r\n//   const registerHandler = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     const config = {\r\n//       header: {\r\n//         \"Content-Type\": \"application/json\",\r\n//       },\r\n//     };\r\n\r\n//     if (password !== confirmPassword) {\r\n//       setPassword(\"\");\r\n//       setConfirmPassword(\"\");\r\n//       setTimeout(() => {\r\n//         setError(\"\");\r\n//       }, 5000);\r\n//       return setError(\"password do not match\");\r\n//     }\r\n\r\n//     try {\r\n//       const { data } = await axios.post(\r\n//         \"/api/auth/register\",\r\n//         { username, email, password },\r\n//         config\r\n//       );\r\n\r\n//       localStorage.setItem(\"authToken\", data.token);\r\n//       navigate(\"/\");\r\n//     } catch (error) {\r\n//       setError(error.response.data.error);\r\n//       setTimeout(() => {\r\n//         setError(\"\");\r\n//       }, 5000);\r\n//     }\r\n//   };\r\n//   return (\r\n//     <div className=\"register-screen\">\r\n//       <form onSubmit={registerHandler} className=\"register-screen__form\">\r\n//         <h3 className=\"register-screen__title\">Regsiter</h3>\r\n//         {error && <span className=\"error-message\">{error}</span>}\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"name\">username</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             required\r\n//             id=\"name\"\r\n//             placeholder=\"enter your username\"\r\n//             value={username}\r\n//             onChange={(e) => setUsername(e.target.value)}\r\n//           />\r\n//         </div>\r\n\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"email\">email</label>\r\n//           <input\r\n//             type=\"email\"\r\n//             required\r\n//             id=\"email\"\r\n//             placeholder=\"enter your email\"\r\n//             value={email}\r\n//             onChange={(e) => setEmail(e.target.value)}\r\n//           />\r\n//         </div>\r\n\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"password\">password</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             required\r\n//             id=\"password\"\r\n//             placeholder=\"enter your password\"\r\n//             value={password}\r\n//             onChange={(e) => setPassword(e.target.value)}\r\n//           />\r\n//         </div>\r\n\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"confirmpassword\">confirm password</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             required\r\n//             id=\"confirmpassword\"\r\n//             placeholder=\"confirm your password\"\r\n//             value={confirmPassword}\r\n//             onChange={(e) => setConfirmPassword(e.target.value)}\r\n//           />\r\n//         </div>\r\n//         <button type=\"submit\">register</button>\r\n\r\n//         <span className=\"register-screen__subtext\">\r\n//           already have an account? <Link to=\"/login\">Login</Link>{\" \"}\r\n//         </span>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default RegisterScreen;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}