{"ast":null,"code":"// import { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import { Link, useNavigate } from \"react-router-dom\";\n// import \"./CSS/RegisterScreen.css\";\n\n// const RegisterScreen = () => {\n//   const [username, setUsername] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [confirmPassword, setConfirmPassword] = useState(\"\");\n//   const [userType, setUserType] = useState(\"User\");\n//   const [secretKey, setSecretKey] = useState(\"\");\n//   const [error, setError] = useState(\"\");\n\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     if (localStorage.getItem(\"auth_token\")) {\n//       navigate(\"/\");\n//     }\n//   }, []);\n\n//   const registerHandler = async (e) => {\n//     // checking if the secretkey is correct to let the admin enter\n//     if (userType === \"Admin\" && secretKey !== \"admin\") {\n//       e.preventDefault();\n\n//       alert(\"Invalid Admin\");\n//     } else {\n//       e.preventDefault();\n\n//       const config = {\n//         header: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//       };\n\n//       if (password !== confirmPassword) {\n//         setPassword(\"\");\n//         setConfirmPassword(\"\");\n//         setTimeout(() => {\n//           setError(\"\");\n//         }, 5000);\n//         return setError(\"Password do not match\");\n//       }\n\n//       try {\n//         const { data } = await axios.post(\n//           \"/api/user/register\",\n//           { username, email, password, userType },\n//           config\n//         );\n//         localStorage.setItem(\"authToken\", data.token);\n//         //2-adding this line to store username in the local storage to get it appeared in welcoming after login\n//         localStorage.setItem(\"username\", username);\n//         localStorage.setItem(\"email\", email);\n//         localStorage.setItem(\"userType\", userType); // Save userType in local storage\n\n//         navigate(\"/UserHome\");\n//       } catch (error) {\n//         console.log(error.response); // Add this line to log the error response\n//         setError(error.response.data.error);\n//         setTimeout(() => {\n//           setError(\"\");\n//         }, 5000);\n//       }\n//     }\n//   };\n\n//   return (\n//     <div className=\"register-screen\">\n//       <form onSubmit={registerHandler} className=\"register-screen__form\">\n//         <h3 className=\"register-screen__title\">Register</h3>\n//         {error && <span className=\"error-message\"> {error}</span>}\n//         {/* radio button */}\n//         <div className=\"register-as\">\n//           <div> Register as:</div>\n//           <div>\n//             {\" \"}\n//             <input\n//               type=\"radio\"\n//               name=\"UserType\"\n//               value=\"User\"\n//               onChange={(e) => setUserType(e.target.value)}\n//             />{\" \"}\n//             User\n//           </div>\n//           <div>\n//             {\" \"}\n//             <input\n//               type=\"radio\"\n//               name=\"UserType\"\n//               value=\"Admin\"\n//               onChange={(e) => setUserType(e.target.value)}\n//             />{\" \"}\n//             Admin\n//           </div>\n//         </div>\n\n//         {/* if the user choose to enter as an admin a secret key input will appear to him */}\n//         {/* Secret Key */}\n\n//         {userType === \"Admin\" ? (\n//           <div className=\"form-group\">\n//             <label>Secret Key</label>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Enter secret key\"\n//               onChange={(e) => setSecretKey(e.target.value)}\n//             />\n//           </div>\n//         ) : null}\n\n//         {/* username */}\n//         <div className=\"form-group\">\n//           <label htmlFor=\"name\">Username:</label>\n//           <input\n//             type=\"text\"\n//             required\n//             id=\"name\"\n//             placeholder=\"Enter username\"\n//             value={username}\n//             onChange={(e) => setUsername(e.target.value)}\n//           />\n//         </div>\n\n//         {/* email */}\n//         <div className=\"form-group\">\n//           <label htmlFor=\"email\">Email:</label>\n//           <input\n//             type=\"email\"\n//             required\n//             id=\"email\"\n//             placeholder=\"Enter email address\"\n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//           />\n//         </div>\n\n//         {/* password */}\n//         <div className=\"form-group\">\n//           <label htmlFor=\"password\">Password:</label>\n//           <input\n//             type=\"password\"\n//             required\n//             id=\"password\"\n//             placeholder=\"Enter password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//           />\n//         </div>\n\n//         {/* confirm password */}\n//         <div className=\"form-group\">\n//           <label htmlFor=\"confirmpassword\">Confirm Password:</label>\n//           <input\n//             type=\"password\"\n//             required\n//             id=\"confirmpassword\"\n//             placeholder=\"Confirm password\"\n//             value={confirmPassword}\n//             onChange={(e) => setConfirmPassword(e.target.value)}\n//           />\n//         </div>\n\n//         <button type=\"submit\" className=\"btn btn-primary\">\n//           Register\n//         </button>\n//         <span className=\"register-screen__subtext\">\n//           Already have an account? <Link to=\"/login\">Login</Link>\n//         </span>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default RegisterScreen;","map":{"version":3,"names":[],"sources":["C:/Users/Munib/Desktop/CodingSchool/systemProject/FrontEnd/src/components/screens/RegisterScreen.js"],"sourcesContent":["// import { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { Link, useNavigate } from \"react-router-dom\";\r\n// import \"./CSS/RegisterScreen.css\";\r\n\r\n// const RegisterScreen = () => {\r\n//   const [username, setUsername] = useState(\"\");\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n//   const [userType, setUserType] = useState(\"User\");\r\n//   const [secretKey, setSecretKey] = useState(\"\");\r\n//   const [error, setError] = useState(\"\");\r\n\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     if (localStorage.getItem(\"auth_token\")) {\r\n//       navigate(\"/\");\r\n//     }\r\n//   }, []);\r\n\r\n//   const registerHandler = async (e) => {\r\n//     // checking if the secretkey is correct to let the admin enter\r\n//     if (userType === \"Admin\" && secretKey !== \"admin\") {\r\n//       e.preventDefault();\r\n\r\n//       alert(\"Invalid Admin\");\r\n//     } else {\r\n//       e.preventDefault();\r\n\r\n//       const config = {\r\n//         header: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//       };\r\n\r\n//       if (password !== confirmPassword) {\r\n//         setPassword(\"\");\r\n//         setConfirmPassword(\"\");\r\n//         setTimeout(() => {\r\n//           setError(\"\");\r\n//         }, 5000);\r\n//         return setError(\"Password do not match\");\r\n//       }\r\n\r\n//       try {\r\n//         const { data } = await axios.post(\r\n//           \"/api/user/register\",\r\n//           { username, email, password, userType },\r\n//           config\r\n//         );\r\n//         localStorage.setItem(\"authToken\", data.token);\r\n//         //2-adding this line to store username in the local storage to get it appeared in welcoming after login\r\n//         localStorage.setItem(\"username\", username);\r\n//         localStorage.setItem(\"email\", email);\r\n//         localStorage.setItem(\"userType\", userType); // Save userType in local storage\r\n\r\n//         navigate(\"/UserHome\");\r\n//       } catch (error) {\r\n//         console.log(error.response); // Add this line to log the error response\r\n//         setError(error.response.data.error);\r\n//         setTimeout(() => {\r\n//           setError(\"\");\r\n//         }, 5000);\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"register-screen\">\r\n//       <form onSubmit={registerHandler} className=\"register-screen__form\">\r\n//         <h3 className=\"register-screen__title\">Register</h3>\r\n//         {error && <span className=\"error-message\"> {error}</span>}\r\n//         {/* radio button */}\r\n//         <div className=\"register-as\">\r\n//           <div> Register as:</div>\r\n//           <div>\r\n//             {\" \"}\r\n//             <input\r\n//               type=\"radio\"\r\n//               name=\"UserType\"\r\n//               value=\"User\"\r\n//               onChange={(e) => setUserType(e.target.value)}\r\n//             />{\" \"}\r\n//             User\r\n//           </div>\r\n//           <div>\r\n//             {\" \"}\r\n//             <input\r\n//               type=\"radio\"\r\n//               name=\"UserType\"\r\n//               value=\"Admin\"\r\n//               onChange={(e) => setUserType(e.target.value)}\r\n//             />{\" \"}\r\n//             Admin\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* if the user choose to enter as an admin a secret key input will appear to him */}\r\n//         {/* Secret Key */}\r\n\r\n//         {userType === \"Admin\" ? (\r\n//           <div className=\"form-group\">\r\n//             <label>Secret Key</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Enter secret key\"\r\n//               onChange={(e) => setSecretKey(e.target.value)}\r\n//             />\r\n//           </div>\r\n//         ) : null}\r\n\r\n//         {/* username */}\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"name\">Username:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             required\r\n//             id=\"name\"\r\n//             placeholder=\"Enter username\"\r\n//             value={username}\r\n//             onChange={(e) => setUsername(e.target.value)}\r\n//           />\r\n//         </div>\r\n\r\n//         {/* email */}\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"email\">Email:</label>\r\n//           <input\r\n//             type=\"email\"\r\n//             required\r\n//             id=\"email\"\r\n//             placeholder=\"Enter email address\"\r\n//             value={email}\r\n//             onChange={(e) => setEmail(e.target.value)}\r\n//           />\r\n//         </div>\r\n\r\n//         {/* password */}\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"password\">Password:</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             required\r\n//             id=\"password\"\r\n//             placeholder=\"Enter password\"\r\n//             value={password}\r\n//             onChange={(e) => setPassword(e.target.value)}\r\n//           />\r\n//         </div>\r\n\r\n//         {/* confirm password */}\r\n//         <div className=\"form-group\">\r\n//           <label htmlFor=\"confirmpassword\">Confirm Password:</label>\r\n//           <input\r\n//             type=\"password\"\r\n//             required\r\n//             id=\"confirmpassword\"\r\n//             placeholder=\"Confirm password\"\r\n//             value={confirmPassword}\r\n//             onChange={(e) => setConfirmPassword(e.target.value)}\r\n//           />\r\n//         </div>\r\n\r\n//         <button type=\"submit\" className=\"btn btn-primary\">\r\n//           Register\r\n//         </button>\r\n//         <span className=\"register-screen__subtext\">\r\n//           Already have an account? <Link to=\"/login\">Login</Link>\r\n//         </span>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default RegisterScreen;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}